var drawerTemplateString='<style>.background-cache {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        transition: opacity 0.2s 0.1s linear;\n        background: #000;\n        opacity: 0;\n        z-index: 1;\n    }  \n    aside {\n        position: absolute;\n        width: 50%;\n        border-left: 1px solid #333;\n        height: 100%;\n        transition: transform 0.3s  cubic-bezier(0.25, 0.46, 0.45, 0.94);\n        top: 0;\n        z-index: 2;\n        left: 0;\n    }\n\n    :host {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n    }\n\n    ::slotted(*) {\n        box-sizing: border-box\n    }</style><aside><slot></slot></aside><div class="background-cache"></div>';const drawerTemplate=document.createElement("template");drawerTemplate.innerHTML=drawerTemplateString;class Drawer extends HTMLElement{constructor(){super();const e=this.attachShadow({mode:"open"});e.appendChild(drawerTemplate.content.cloneNode(!0)),this.aside=e.querySelector("aside"),this.backgroundCache=e.querySelector(".background-cache")}connectedCallback(){this.aside.style.width=this.getAttribute("width"),this.aside.style.transform="translateX(-100%)",this.backgroundCache.style.opacity=0,this.style.display=" none",this.backgroundCache.addEventListener("click",()=>{this.close()})}open(){this.style.display="",setTimeout(e=>{this.aside.style.transform="translateX(-1px)",this.backgroundCache.style.opacity=.3},32)}close(){setTimeout(e=>{this.aside.style.transform="translateX(-100%)",this.backgroundCache.style.opacity=0,setTimeout(e=>{this.style.display="none"},500)},32)}}customElements.define("moko-drawer",Drawer);
